BFT算法基本默认都是同步通信，因为FLP不可能定理（在网络可靠且存在节点失效的异步分布式系统中，不存在一个可以解决一致性问题的确定性公式算法）
BFT算法更适合非公链场景，因为即使PBFT把消息传播的复杂度优化到了节点数平方的规模，但是公链节点数量是难以预计的，
当数量庞大时整个系统存在不可用风险，其次公链是一个动态网络，节点随意加入退出，增加了算法执行的难度

特点:
1. 速度：250,000 交易/秒
gossip协议，谣言算法传播消息，并且做了优化减少网络通讯数据量
hashgraph目前只能应用于私有链或者联盟链，即有准入权限的网络
无准入权限的网络为了解决女巫攻击和双花问题等恶意节点的问题，会影响网络吞吐量
而有准入权限的网络是事先知道了节点身份，无需考虑女巫攻击等问题，因此更容易达到共识
同比其他私有区块链网络：超级账本Fabric（700次/秒），Red Belly（400,000次/秒）。不能那这个和公链的吞吐量相比

2. 公平：经数学论证确保公平性（通过共识时间戳）

3. 安全：银行级别的安全性（异步拜占庭容错）

4. 异步BFT，gossip算法传播事件的关系和拓扑结构（DAG）以及虚拟投票
为什么能做到异步BFT，因为FLP定理指出了理论上是不可能的，hashgraph对共识定义做了一些放宽：
在极小概率下共识算法会无限期的实行下去，但这一概率接近为0
hashgraph的共识算法是异步的，非确定性的，但能保证最终确定性。并且没有类似DPOS的领导节点，避免了DDOS攻击导致的系统问题风险
为何hashgraph可以被应用到公链？前面提到BFT算法网络带宽消耗巨大，并且无法很好应对动态网路
而gossip协议+虚拟投票使得在执行共识时不需要突发的大规模消息传递，gossip算法虽然无法保证在某个时刻所有节点状态一致，
但是能保证在最终某个时刻所有节点对某个时间点之前的所有历史达成一致



由于拜占庭容错协议的限制，最多支持不超过1/3节点非正常工作

############
# 关键名词 #
############
可见(seeing)：
区块B可见区块A，即区块A是区块B的祖先，区块B可以沿着指针找到区块A
强可见(strongly seeing)
区块B强可见区块A，即B到A的连线通路上跨越了绝对多数的节点（大于总节点数2/3），
通过数学论证可以保证两个强可见的节点在虚拟投票时能获得一致的结果，这是hashgraph能达成最终拜占庭一致的理论基础
见证人(witness)
每个节点在每一个轮次中创建的第一个区块就是见证人(相当于某一轮次的祖先event)，某个节点可能在某一轮次中没有创建witnes
创建轮次（round created）
如果一个父区块的轮次是R，那么子区块的轮次或者是R或者是R+1，当且仅当子区块强可见R轮中绝对多数的见证人，则它的轮次+1
知名见证人(famous witness)
如果R轮的见证人能被绝对多数的R+1轮见证人可见，则它是知名见证人。
famous witness 计算方法：
根据BFT协议在本地执行虚拟投票，因为每个节点都存储了完整的DAG结构，不需要和其他节点通信即可完成投票。
每个R+1轮见证人会对某第R轮见证人投票是否可见，R+2轮的某一见证人会对R+1轮的投票进行计票，即R+2轮的见证人会从自己
强可见的R+1轮见证人那里收集投票结果，一旦某个投票结果的计票数量超过绝大多数，见证人就可以决定出投票结果，即达成共识
理论证明，任何一个R+2轮见证人如果能对投票结果做出决定，那这个结果就是全网的结论。如果这轮的见证人没有做出决定，
既有下一轮见证人计票决定，依次直到得出确切结果。大部分情况下大部分event不是见证人，因此大部分的虚拟投票不会耗时过于
漫长，一旦有知名见证人确定下来，整个网络的区块顺序就能更快速的推导出来。
接受轮次(round received):
每个event除了创建轮次还有接受轮次，R轮（创建轮次）中所有的知名见证人可见的任何普通event都是R轮的接受轮次，
如果有的普通event没有被所有知名见证人可见，则接受轮次未定且一定晚于R轮。
确定共识顺序：
在确定接受轮次后，对所有event排序，先按照接受轮次从低到高排，一样的话按照时间戳从早到晚排，还是一样就按event签名与
某随机数（该轮所有知名见证者的签名进行异或得到随机数）异或得到的结果来排序。



